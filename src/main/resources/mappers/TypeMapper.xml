<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ht.blog.dao.TypeMapper">

    <!-- ==================================== 以下为后台管理 ================================== -->
    <!-- 添加分类 -->
    <insert id="addType" parameterType="com.ht.blog.pojo.Type">
        INSERT INTO t_type(t_type.id, t_type.name) VALUES (#{id}, #{name})
    </insert>

    <!-- 删除一个分类 -->
    <delete id="deleteType" parameterType="Long">
        DELETE FROM `t_type` WHERE `id` = #{id}
    </delete>

    <!-- 修改一个分类 -->
    <update id="updateType" parameterType="com.ht.blog.pojo.Type">
        UPDATE `t_type`
        SET `name` = #{name}
        WHERE `id` = #{id}
    </update>

    <!-- 查看所有分类 -->
    <select id="listType" resultType="com.ht.blog.pojo.Type">
        SELECT `id`,`name` FROM `t_type`
    </select>

    <!-- 根据名称查询分类 -->
    <select id="getTypeByName" parameterType="String" resultType="com.ht.blog.pojo.Type">
        SELECT `id`,`name`
        FROM `t_type`
        WHERE `name` = #{name}
    </select>

    <!-- 根据id查询分类 -->
    <select id="getTypeById" parameterType="Long" resultType="com.ht.blog.pojo.Type">
        SELECT `id`,`name`
        FROM `t_type`
        WHERE `id` = #{id}
    </select>

    <!-- ==================================== 以下为前台展示 ================================== -->
    <!--JavaType和ofType都是用来指定对象类型的，但是JavaType是用来指定pojo中属性的类型，而ofType指定的是 映射到list集合属性中pojo的类型。-->
    <resultMap id="typeResultMap" type="com.ht.blog.pojo.Type">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <collection property="blogs" ofType="com.ht.blog.pojo.Blog">
            <id property="id" column="id"></id>
            <result property="typeId" column="type_id"></result>
        </collection>
    </resultMap>

    <!-- 查看所有分类 -->
    <!--<select id="listTypeFront" resultMap="typeResultMap">-->
        <!--SELECT t.id tid, t.name, b.id bid, b.type_id-->
        <!--FROM t_type t, t_blog b-->
    <!--</select>-->




</mapper>
